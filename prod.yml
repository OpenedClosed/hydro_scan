version: '3.3'
name: prod
services:
  db:
    image: postgres:15.3-alpine3.18
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file: prod.env

  backend:
    build: ./backend/
    restart: always
    env_file: prod.env
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static
      - ./backend/media:/app/media
    command: sh -c "python3 manage.py collectstatic --no-input &&
                    python3 manage.py makemigrations --no-input &&
                    python3 manage.py makemigrations --merge --no-input &&
                    python3 manage.py migrate &&
                    python3 manage.py createsuperuser --no-input || true &&
                    python3 manage.py db_script &&
                    gunicorn hydro_scan.wsgi:application --bind 0.0.0.0:80"

  frontend:
    build:
      context: ./frontend
      target: prod
    volumes:
      - front_data:/app/dist/spa
      - node_data:/app/node_modules

  proxy:
    build: ./proxy
    restart: always
    env_file: prod.env
    depends_on:
      - backend
      - frontend
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./proxy/prod/first_ssl.conf:/first_ssl.conf
      - ./proxy/prod/prod.conf:/prod.conf.template
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./backend/static:/app/static
      - ./backend/media:/app/media
      - front_data:/frontend
    command: sh -c "cp /first_ssl.conf /etc/nginx/conf.d/default.conf &&
                    nginx -g 'daemon on;' &&
                    /certbot_first_ssl.sh &&
                    nginx -s stop &&
                    envsubst < /prod.conf.template > /etc/nginx/conf.d/default.conf &&
                    crond -b -l 8 -L /var/log/cron.log &&
                    nginx -g 'daemon off;'"

volumes:
  front_data:
  node_data:
  db_data:
  certbot-etc:
  certbot-var:
